""" Generated by utils/cgit/cgit_util_generate_admin_file on 2022-01-24 14:48:09.283627 """

from django.contrib import admin
from django.urls import reverse
from django.utils.html import format_html

from .models import (
    CongressMaster,
    Congress,
    Event,
    Category,
    Session,
    EventEntry,
    EventEntryPlayer,
    PlayerBatchId,
    CongressLink,
    CongressNewsItem,
    BasketItem,
    EventLog,
    EventPlayerDiscount,
    Bulletin,
    CongressDownload,
    PartnershipDesk,
)


class CongressMasterAdmin(admin.ModelAdmin):
    """Admin class for model CongressMaster"""

    search_fields = ["org"]
    autocomplete_fields = [
        "org",
    ]


class CongressAdmin(admin.ModelAdmin):
    """Admin class for model Congress"""

    search_fields = ["congress_master", "author"]
    autocomplete_fields = [
        "congress_master",
        "author",
        "last_updated_by",
    ]


class EventAdmin(admin.ModelAdmin):
    """Admin class for model Event"""

    autocomplete_fields = [
        "congress",
    ]
    list_display = (
        "event_name",
        "congress",
        "description",
    )
    search_fields = ("event_name", "congress__name", "description")
    readonly_fields = ("show_url",)

    def show_url(self, instance):
        url = reverse("events:admin_event_summary", kwargs={"event_id": instance.pk})
        return format_html(f"<a href='{url}'>{url}")

    show_url.short_description = "Event Admin URL"


class CategoryAdmin(admin.ModelAdmin):
    """Admin class for model Category"""

    search_fields = [
        "event",
    ]
    autocomplete_fields = [
        "event",
    ]


class SessionAdmin(admin.ModelAdmin):
    """Admin class for model Session"""

    autocomplete_fields = [
        "event",
    ]


class EventEntryAdmin(admin.ModelAdmin):
    """Admin class for model EventEntry"""

    search_fields = ["event", "primary_entrant"]
    autocomplete_fields = [
        "event",
        "primary_entrant",
        "category",
    ]


class EventEntryPlayerAdmin(admin.ModelAdmin):
    """Admin class for model EventEntryPlayer"""

    autocomplete_fields = [
        "event_entry",
        "player",
        "paid_by",
    ]


class PlayerBatchIdAdmin(admin.ModelAdmin):
    """Admin class for model PlayerBatchId"""

    autocomplete_fields = [
        "player",
    ]


class CongressLinkAdmin(admin.ModelAdmin):
    """Admin class for model CongressLink"""

    autocomplete_fields = [
        "congress",
    ]


class CongressNewsItemAdmin(admin.ModelAdmin):
    """Admin class for model CongressNewsItem"""

    autocomplete_fields = [
        "congress",
    ]


class BasketItemAdmin(admin.ModelAdmin):
    """Admin class for model BasketItem"""

    autocomplete_fields = [
        "player",
        "event_entry",
    ]


class EventLogAdmin(admin.ModelAdmin):
    """Admin class for model EventLog"""

    autocomplete_fields = [
        "event",
        "actor",
        "event_entry",
    ]


class EventPlayerDiscountAdmin(admin.ModelAdmin):
    """Admin class for model EventPlayerDiscount"""

    autocomplete_fields = [
        "event",
        "player",
        "admin",
    ]


class BulletinAdmin(admin.ModelAdmin):
    """Admin class for model Bulletin"""

    autocomplete_fields = [
        "congress",
    ]


class CongressDownloadAdmin(admin.ModelAdmin):
    """Admin class for model CongressDownload"""

    autocomplete_fields = [
        "congress",
    ]


class PartnershipDeskAdmin(admin.ModelAdmin):
    """Admin class for model PartnershipDesk"""

    autocomplete_fields = [
        "event",
        "player",
    ]


admin.site.register(CongressMaster, CongressMasterAdmin)
admin.site.register(Congress, CongressAdmin)
admin.site.register(Event, EventAdmin)
admin.site.register(Category, CategoryAdmin)
admin.site.register(Session, SessionAdmin)
admin.site.register(EventEntry, EventEntryAdmin)
admin.site.register(EventEntryPlayer, EventEntryPlayerAdmin)
admin.site.register(PlayerBatchId, PlayerBatchIdAdmin)
admin.site.register(CongressLink, CongressLinkAdmin)
admin.site.register(CongressNewsItem, CongressNewsItemAdmin)
admin.site.register(BasketItem, BasketItemAdmin)
admin.site.register(EventLog, EventLogAdmin)
admin.site.register(EventPlayerDiscount, EventPlayerDiscountAdmin)
admin.site.register(Bulletin, BulletinAdmin)
admin.site.register(CongressDownload, CongressDownloadAdmin)
admin.site.register(PartnershipDesk, PartnershipDeskAdmin)
