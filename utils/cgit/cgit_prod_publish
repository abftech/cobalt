#!/bin/bash

# about: release to production

BRANCH=`git branch --show-current`

if [[ $BRANCH != *"release"* ]]; then
  echo "You are not on a release branch. Change to a release branch to perform this function."
  exit 1
fi

clear
echo "*************** PRODUCTION RELEASE ABOUT TO HAPPEN *********************"
echo ""
echo ""
echo "Congratulations on being ready to release to production."
echo ""
echo "I will check out the release branch $BRANCH and install this in"
echo "PRODUCTION. I will then get the other branches, develop and master"
echo "in sync."
echo ""
echo ""
read -p "Press key to continue..." -n1 -s

if [[ -z $(git status -s) ]]
then
  echo ""
  echo ""
  echo "Pulling latest $BRANCH branch..."
  echo ""

  git pull origin $BRANCH
  if [ $? -ne 0 ];then
   exit 1
  fi

  echo ""
  echo "Deploying to PRODUCTION server..."
  echo ""

PRODENV=`eb list | grep $CGIT_ENV-production`
PRODNUM=`eb list | grep $CGIT_ENV-production | wc | awk '{print $1}'`

if [ "$PRODNUM" = "1" ]
then
    # Get number of EC2 instances running. We want at least 2
    utils/cgit/_cgit_scale_environment_for_deployment $PRODENV
    ec2_instances=$?

  echo "Original instance number was $ec2_instances"

   echo "Deploying code to $PRODENV..."
   DATE=$(date '+%a_%d/%m/%Y_%H:%M:%S')
   eb deploy -m "$BRANCH@$DATE" $PRODENV

   if [ "$ec2_instances" = "1" ]
    then

      echo "Restoring instance number to $ec2_instances. Could take a few minutes..."

      eb scale "$ec2_instances" "$PRODENV"

   fi

else
   echo "Cannot deploy to Production, found more than one Production environment."
   echo $PRODENV
fi


  echo ""
  echo ""
else
  echo ""
  echo ""
  echo "Cannot comply with request."
  echo "There are uncommitted changes or other problems with your git status. See below."
  echo ""
  echo ""
  git status
  echo ""
  echo ""
  exit
fi

echo ""
echo "Checking out develop branch..."
echo ""

git checkout develop
if [ $? -ne 0 ];then
 exit 1
fi

echo ""
echo "Pulling latest develop branch..."
echo ""

git pull origin develop
if [ $? -ne 0 ];then
 exit 1
fi

echo ""
echo "Merging $BRANCH..."
echo ""

git merge $BRANCH
if [ $? -ne 0 ];then
 exit 1
fi

echo ""
echo "Pushing develop..."
echo ""

git push origin develop
if [ $? -ne 0 ];then
 exit 1
fi

echo ""
echo "Checking out master branch..."
echo ""

git checkout master
if [ $? -ne 0 ];then
 exit 1
fi

echo ""
echo "Pulling latest master branch..."
echo ""

git pull origin master
if [ $? -ne 0 ];then
 exit 1
fi

echo ""   
echo "Merging $BRANCH..."
echo ""

git merge $BRANCH
if [ $? -ne 0 ];then
 exit 1
fi

echo ""
echo "Pushing master branch..."
echo ""

git push origin master
if [ $? -ne 0 ];then
 exit 1
fi

echo ""
echo "Running the smoke test..."
cgit_prod_smoke_test