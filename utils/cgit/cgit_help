#!/bin/sh

cat << EOF

CGIT - Cobalt Git Commands

These cgit commands automate the Git and Elastic Beanstalk commands
used for standard activities. 

For most commands to work you will need to be on the relevant branch.
Use git checkout [branch] if necessary.

Dev/Test
--------

cgit_dev_start            - start a new feature
cgit_dev_save             - save work so far
cgit_dev_finish           - merges into develop and deploys to test

UAT
---

cgit_uat_publish          - pushes current develop to UAT, creates release
cgit_uat_fix_start        - creates bugfix for a release in UAT
cgit_uat_fix_save         - saves work so far 
cgit_uat_fix_finish       - releases fix to UAT

Production
----------

cgit_prod_publish         - push release to production
cgit_prod_hotfix_start    - create hotfix 
cgit_prod_hotfix_save     - save work so far 
cgit_prod_hotfix_test     - releases hotfix to a test environment
cgit_prod_hotfix_finish   - releases hotfix to production

Current Status
--------------
(Assumes local branches are up to date)

EOF

# Get status of envs
TESTENV=$(eb list | grep cobalt-test | tr \* " ")
UATENV=$(eb list | grep cobalt-uat | tr \* " ")
PRODENV=$(eb list | grep cobalt-production | tr \* " ")

APP=$(eb status $TESTENV | grep Deploy | awk '{print $3}')
DESC=$(aws elasticbeanstalk describe-application-versions --version-label "$APP" | grep Description | awk '{print $2}' | tr -d '"' | tr -d ,)
echo "Test is running: $DESC"

APP=$(eb status $UATENV | grep Deploy | awk '{print $3}')
DESC=$(aws elasticbeanstalk describe-application-versions --version-label "$APP" | grep Description | awk '{print $2}' | tr -d '"' | tr -d ,)
UATBRANCH=$(echo $DESC | tr '@' ' ' | awk '{print $1}')
FILE_DIFF=$(git diff --name-status $UATBRANCH..develop | wc | awk '{print $1}')
echo "UAT is running: $DESC [$FILE_DIFF files different from develop]"

APP=$(eb status $PRODENV | grep Deploy | awk '{print $3}')
DESC=$(aws elasticbeanstalk describe-application-versions --version-label "$APP" | grep Description | awk '{print $2}' | tr -d '"' | tr -d ,)
PRODBRANCH=$(echo $DESC | tr '@' ' ' | awk '{print $1}')
PRODBRANCH=release/1.0.13
echo "PRODBRANCH is hardcoded for now"
FILE_DIFF=$(git diff --name-status $PRODBRANCH..$UATBRANCH | wc | awk '{print $1}')
echo "Production is running: $DESC [$FILE_DIFF files different from UAT]"
echo ""