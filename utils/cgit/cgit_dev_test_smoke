#!/bin/bash

# about: runs smoke tests

source utils/cgit/_cgit_include_vars

# Variables
PORT=8088
export RDS_DB_NAME=test
export DUMMY_DATA_COUNT=1

# Get arguments
COVERAGE=0
SILENT=0
MODULE=""

while [[ $# -gt 0 ]]; do
  case $1 in
    -c|--coverage)
      COVERAGE=1
      shift # past argument
      ;;
    -s|--silent)
      SILENT=1
      shift # past argument
      ;;
    -m|--module)
      MODULE="$2"
      shift # past argument
      shift # past value
      ;;
    -*|--*)
      echo "Unknown option $1"
      exit 1
      ;;
  esac
done

_cgit_test_start --django

COMMAND="./manage.py run_tests_smoke --base_url=http://127.0.0.1:$PORT --show"

if [ $SILENT = 1 ]; then
  COMMAND="$COMMAND --silent"
fi

if [ $COVERAGE -eq 1 ]
then
  COMMAND="coverage run -p $COMMAND"
fi

echo "Running tests in tests/scripts/test_suite..."
echo ""

# Keep score in a file
rm -f /tmp/smoke_test_outcome.txt

# Add start time as first row
date +"%s" > /tmp/smoke_test_outcome.txt

# Set FILE_LIST to a single file or all of them
if [ "$MODULE" = "" ]; then
  FILE_LIST=tests/scripts/test_suite/*
else
  FILE_LIST=$MODULE
fi

# Loop through the test files
for FILE_AND_PATH in $FILE_LIST; do
  FILE_NAME=$(basename "$FILE_AND_PATH")

  # run command
  $COMMAND --script "test_suite/$FILE_NAME"

  # get status
  rc=$?

  # Save outcome in file
  echo "$FILE_NAME $rc" >> /tmp/smoke_test_outcome.txt

  # Print to screen
  printf "%-50s" "$FILE_NAME"
  if [ "$rc" == "0" ]; then
    printf "${YELLOW}Pass${NC}\n"
  else
    printf "${RED}Fail${NC}\n"
  fi
done

# Create summary HTML report

./manage.py create_smoke_test_report

# Tidy up
_cgit_test_finish

# Exit code should be 1 if there are any errors
# remove top line, get only the return code, search for any 1's
tail -n +2 /tmp/smoke_test_outcome.txt | awk '{print $2}' | grep 1 >/dev/null
if [ $? -eq 0 ]; then
  exit 1
else
  exit 0
fi